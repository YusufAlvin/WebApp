<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
	<SpaRoot>ClientApp\</SpaRoot>
	<AllowUnsafeBlocks>False</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Easy.MessageHub" Version="5.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="7.0.12" />
    <PackageReference Include="Microsoft.AspNetCore.Server.Kestrel" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.11">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="7.0.11" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Data\Data.csproj" />
    <ProjectReference Include="..\LoggingLibrary\LoggingLibrary.csproj" />
    <ProjectReference Include="..\Sequence\Robot.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="ClientApp\build\asset-manifest.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Update="ClientApp\build\manifest.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Update="ClientApp\package.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Update="ClientApp\public\manifest.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
    <Content Update="Config\log4net.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
		<Exec Command="rd /s /q $(TargetDir)\wwwroot" />
		<Exec Command="mkdir $(TargetDir)\wwwroot" />
		<Exec Command="rd /s /q $(ProjectDir)\ClientApp\build" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />
	</Target>

    <Target Name="PostBuild" Condition=" '$(OS)' != 'Unix'" AfterTargets="PostBuildEvent">
	    <Exec Command="xcopy &quot;$(SpaRoot)build\*.*&quot; &quot;$(TargetDir)wwwroot\&quot; /s /e /y" />
    </Target>

</Project>
